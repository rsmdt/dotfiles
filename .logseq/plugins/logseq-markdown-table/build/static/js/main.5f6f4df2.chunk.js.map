{"version":3,"sources":["utils/withTable.js","utils/contants.js","utils/util.js","utils/table.js","components/ToolBar.jsx","components/TableEditor.jsx","pages/App.jsx","utils/parseRawInputByMarkdownIt.js","index.js","utils/testExample.js"],"names":["withTable","editor","deleteBackward","deleteForward","insertBreak","unit","selection","Editor","nodes","match","n","isEditor","Element","isElement","type","cell","prevNodePath","before","at","tableNode","cellPath","start","Point","equals","anchor","Range","isCollapsed","after","end","DEFAULT_TABLE","tableLineReg","stringToSlateValue","str","_arr","trim","split","filter","Boolean","contentArr","concat","slice","res","map","rowStr","rowArr","length","createTableNode","createTableCell","text","children","cellText","tableChildren","Array","from","value","createRow","TableUtil","insertTable","rows","columns","mode","newTable","Transforms","insertNodes","insertCells","path","action","cursorPosition","row","column","existingText","arr","newSelection","splice","fill","_path","focus","item","_row","console","error","removeTable","select","removeNodes","edit","oldTable","test","moveCursor","rowsCount","columnsCount","transformSelect","get","join","cursor","offset","this","ToolBar","useSlate","table","handleButtonClick","e","preventDefault","className","title","arrowPointAtCenter","placement","InsertRowAboveOutlined","onMouseDown","InsertRowBelowOutlined","DeleteRowOutlined","InsertRowLeftOutlined","InsertRowRightOutlined","DeleteColumnOutlined","props","attributes","element","TableEditor","ref","content","useState","setValue","useMemo","withTables","withReact","createEditor","tableUtil","renderElement","useCallback","useImperativeHandle","getEditorValue","onKeydown","code","ReactEditor","isFocused","onChange","placeholder","forwardRef","logseq","window","logseqApp","App","logseqEditor","isInBrower","process","REACT_APP_ENV","genTable","startLine","endLine","splitStrByTable","tables","strToArr","strArrByTable","forEach","index","preEndLine","push","lastTableEndLine","blockId","tableEditorMapRef","useRef","arrAfterSplitByTable","setArrAfterSplitByTable","onClickCancel","hideMainUI","shiftKey","Object","keys","current","key","useEffect","log","addEventListener","removeEventListener","style","background","zIndex","onClick","maxHeight","node","dom","setTableEditorRef","whiteSpace","ghost","icon","PlusOutlined","find","showMsg","markdownContent","slateVal","rowStrs","cells","slateValueToString","updateBlock","then","catch","err","md","MarkdownIt","parseMarkdownTable","input","strArr","parse","token","endLineStr","trueEndLine","warn","bootEditor","ReactDOM","render","StrictMode","document","getElementById","showMainUI","renderApp","ready","provideStyle","registerBlockContextMenuItem","getBlock","uuid","block","format","on","visible","unmountComponentAtNode"],"mappings":"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","file":"static/js/main.5f6f4df2.chunk.js","sourcesContent":["import { Editor, Range, Point, Element } from 'slate'\n\nconst withTable = (editor) => {\n  const { deleteBackward, deleteForward, insertBreak } = editor\n\n  editor.deleteBackward = unit => {\n    const { selection } = editor;\n    if (selection) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n      const prevNodePath = Editor.before(editor, selection)\n\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n      if (cell) {\n        const [, cellPath] = cell\n\n        const start = Editor.start(editor, cellPath)\n        if (Point.equals(selection.anchor, start)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteBackward(unit)\n  }\n  editor.deleteForward = unit => {\n    const { selection } = editor\n    if (selection && Range.isCollapsed(selection)) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n\n      const prevNodePath = Editor.after(editor, selection)\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n\n      if (cell) {\n        const [, cellPath] = cell\n        const end = Editor.end(editor, cellPath)\n\n        if (Point.equals(selection.anchor, end)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteForward(unit)\n  }\n\n  editor.insertBreak = () => {\n    const { selection } = editor\n    if (selection) {\n      const [table] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table',\n      })\n\n      if (table) {\n        return\n      }\n    }\n\n    insertBreak()\n  }\n  return editor;\n}\n\n\nexport default withTable;","export const DEFAULT_TABLE = '|||\\n|--|--|\\n|||'\n\nexport const tableLineReg = /^\\|.+\\|$/","import { DEFAULT_TABLE } from './contants'\n\nexport const stringToSlateValue = (str = '') => {\n  str = str || DEFAULT_TABLE\n  const _arr = str.trim().split('\\n').filter(Boolean)\n  const contentArr = [_arr[0]].concat(_arr.slice(2))\n  const res = contentArr.map(rowStr => {\n    const rowArr = rowStr.trim().split('|')\n    return rowArr.slice(1, rowArr.length - 1)\n  })\n  return createTableNode(res)\n}\n\nexport const slateValueToString = (slateVal) => {\n  let rowStrs = Array.from(slateVal.children, (row) => {\n    const cells = Array.from(row.children, (cell) => {\n      return cell.children[0].text\n    }).join('|')\n    return `|${cells}|`\n  })\n  rowStrs.splice(1, 0, `|${Array.from(slateVal.children[0].children, () => '--').join('|')}|`)\n  return rowStrs.join('\\n')\n}\n\nconst createRow = (cellText) => {\n  const newRow = Array.from(cellText, (value) => createTableCell(value))\n  return {\n    type: \"table-row\",\n    children: newRow\n  }\n}\n\nconst createTableCell = (text) => {\n  return {\n    type: \"table-cell\",\n    children: [{ text }]\n  }\n}\n\nexport const createTableNode = (cellText) => {\n  const tableChildren = Array.from(cellText, (value) => createRow(value))\n  let tableNode = { type: \"table\", children: tableChildren }\n  return tableNode\n}","import { Transforms, Editor, Range, Element } from \"slate\"\nimport { createTableNode } from \"./util\"\nimport { get } from 'lodash'\n\nexport class TableUtil {\n  constructor(editor) {\n    this.editor = editor;\n  }\n\n  insertTable = (rows, columns) => {\n    const [tableNode] = Editor.nodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n\n    if (tableNode) return;\n    if (!rows || !columns) {\n      return;\n    }\n    const cellText = Array.from({ length: rows }, () =>\n      Array.from({ length: columns }, () => \"\")\n    );\n    const newTable = createTableNode(cellText);\n\n    Transforms.insertNodes(this.editor, newTable, {\n      mode: \"highest\"\n    });\n    Transforms.insertNodes(\n      this.editor,\n      { type: \"paragraph\", children: [{ text: \"\" }] },\n      { mode: \"highest\" }\n    );\n  };\n\n  insertCells = (tableNode, path, selection, action) => {\n    const { anchor } = selection\n    const cursorPosition = { row: anchor?.path[1], column: anchor?.path[2] }\n\n    let existingText = Array.from(tableNode.children, (rows) =>\n      Array.from(rows.children, (arr) => arr.children[0].text)\n    );\n    const columns = existingText[0].length;\n    let newSelection = {...selection}\n\n    if (action === 'insert-row-above') {\n      existingText.splice(cursorPosition.row, 0, Array(columns).fill(''))\n      let _path = [...anchor.path]\n      _path.splice(1, 1, cursorPosition.row + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-row-below') {\n      existingText.splice(cursorPosition.row + 1, 0, Array(columns).fill(''))\n    } else if (action === 'insert-column-above') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 0, '')\n        return _row\n      })\n      let _path = [...anchor.path]\n      _path.splice(2, 1, cursorPosition.column + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-column-below') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column + 1, 0, '')\n        return _row\n      })\n    } else if (action === 'delete-row' && existingText?.length > 1) {\n      existingText.splice(cursorPosition.row, 1)\n    } else if (action === 'delete-column' && columns > 1 ) {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 1)\n        return _row\n      })\n    } else {\n      return console.error('[insert cells run error]: unsupport action or can not delete', action, columns)\n    }\n\n    this.removeTable()\n    const newTable = createTableNode(existingText);\n    Transforms.insertNodes(this.editor, newTable, {\n      at: path\n    });\n    if (action !== 'delete-row' && action !== 'delete-column') {\n      // keep cursor position\n      Transforms.select(this.editor, newSelection)\n    }\n  };\n\n  removeTable = () => {\n    Transforms.removeNodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n  };\n\n  /**\n   * insert or delete\n   * @param {string} action 'insert-row-above' | 'insert-row-below' | 'insert-row-above' | 'insert-row-below' | 'delete-row' | 'delete-column'\n   */\n  edit = (action = 'insert-row-below') => {\n    const { selection } = this.editor;\n    if (!!selection && Range.isCollapsed(selection)) {\n      const [tableNode] = Editor.nodes(this.editor, {\n        match: (n) =>\n          !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\"\n      });\n      if (tableNode) {\n        const [oldTable, path] = tableNode;\n        if (/^cursor-\\w+/.test(action)) {\n          this.moveCursor(oldTable, selection, action)\n        } else {\n          this.insertCells(oldTable, path, selection, action);\n        }\n      }\n    }\n  };\n\n  moveCursor = (tableNode, selection, action = 'cursor-next') => {\n    const { focus } = selection\n    const cursorPosition = { row: focus?.path[1], column: focus?.path[2] }\n\n    // console.log('[faiz:] === tableNode', tableNode)\n    const rowsCount = tableNode.children.length\n    const columnsCount = tableNode.children[0].children.length\n    // console.log('[faiz:] === current cursor state', cursorPosition, rowsCount, columnsCount)\n\n    function transformSelect(editor, _path) {\n      const text = get(tableNode.children, _path.slice(1, 3).map(item => `[${item}].children`).concat(`[${_path[3]}].text`).join(''))\n      const cursor = {\n        path: _path,\n        offset: text.length,\n      }\n      Transforms.select(editor, { anchor: cursor, focus: cursor })\n    }\n\n    if (action === 'cursor-next') {\n      let path = [...focus.path]\n      if (cursorPosition.column < columnsCount - 1) {\n        // 横向移动到下一个\n        path = [0, cursorPosition.row, cursorPosition.column + 1, 0]\n      } else if (cursorPosition.row < rowsCount - 1) {\n        // 处于当前行最后一个, 光标移动到下一行第一个\n        path = [0, cursorPosition.row + 1, 0, 0]\n      }\n      transformSelect(this.editor, path)\n    } else if (action === 'cursor-prev') {\n      let path = [...focus.path]\n      if (cursorPosition.column > 0) {\n        // 横向移动到上一个\n        path = [0, cursorPosition.row, cursorPosition.column - 1, 0]\n      } else if (cursorPosition.row > 0) {\n        // 处于当前行第一个, 光标移动到上一行最后一个\n        path = [0, cursorPosition.row - 1, columnsCount - 1, 0]\n      }\n      transformSelect(this.editor, path)\n    }\n\n  }\n\n}\n","import { useSlate } from 'slate-react'\nimport { InsertRowAboveOutlined, InsertRowBelowOutlined, InsertRowLeftOutlined, InsertRowRightOutlined, DeleteRowOutlined, DeleteColumnOutlined } from '@ant-design/icons'\nimport { Tooltip } from 'antd'\n\nimport { TableUtil } from '../utils/table'\n\nconst ToolBar = () => {\n  const editor = useSlate()\n\n  const table = new TableUtil(editor)\n\n  const handleButtonClick = (e, action) => {\n    e.preventDefault()\n    table.edit(action)\n  }\n\n  return (\n    <div className=\"mb-2 space-x-2 bg-white inline-flex px-3 py-1 rounded-md shadow-sm\">\n      <Tooltip title=\"insert row above\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowAboveOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-above')} />\n      </Tooltip>\n      <Tooltip title=\"insert rowbelow\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowBelowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-below')} />\n      </Tooltip>\n      <Tooltip title=\"delete row\" arrowPointAtCenter placement=\"topLeft\">\n        <DeleteRowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-row')} />\n      </Tooltip>\n\n      <div className=\"border-l border-gray-300\"></div>\n\n      <Tooltip title=\"insert column above\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowLeftOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-above')} />\n      </Tooltip>\n      <Tooltip title=\"insert column below\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowRightOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-below')} />\n      </Tooltip>\n      <Tooltip title=\"delete column\" arrowPointAtCenter placement=\"topLeft\">\n        <DeleteColumnOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-column')} />\n      </Tooltip>\n\n    </div>\n  )\n}\n\nexport default ToolBar","import { useState, useMemo, useCallback, useImperativeHandle, forwardRef } from 'react'\nimport { createEditor } from 'slate'\nimport { Slate, Editable, withReact, ReactEditor } from 'slate-react'\n\nimport withTables from '../utils/withTable.js'\nimport ToolBar from '../components/ToolBar'\nimport { stringToSlateValue } from '../utils/util.js'\nimport { TableUtil } from '../utils/table'\nimport { DEFAULT_TABLE } from '../utils/contants'\n\nconst Element = props => {\n  const { attributes, children, element } = props\n  switch (element.type) {\n    case 'table':\n      return (<table>\n        <tbody {...attributes}>{children}</tbody>\n      </table>)\n    case 'table-row':\n      return <tr {...attributes}>{children}</tr>\n    case 'table-cell':\n      return <td {...attributes}>{children}</td>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst TableEditor = ({ content = DEFAULT_TABLE, className = '' }, ref) => {\n  // const [value, setValue] = useState([\n  //   // {\n  //   //   type: 'paragaph',\n  //   //   children: [{ text: 'First line of text in Slate JS. ' }],\n  //   // },\n    // {\n    //   type: 'table',\n    //   children: [\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //   ]\n    // }\n  // ])\n  // console.log('[faiz:] === tableEditor input: \\n', content)\n  const [value, setValue] = useState([stringToSlateValue(content)])\n  // console.log('[faiz:] === tableEditor format to Slate Editor Node: ', stringToSlateValue(content))\n\n  const editor = useMemo(() => withTables(withReact(createEditor())), [])\n  const tableUtil = useMemo(() => new TableUtil(editor), [editor])\n  const renderElement = useCallback(props => <Element {...props} />, [])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      getEditorValue: () => value,\n      onKeydown: (code) => {\n        const isFocused = ReactEditor.isFocused(editor)\n        if (!isFocused) return\n        if (code === 'Tab') {\n          tableUtil.edit('cursor-next')\n        } else if (code === 'ShiftTab') {\n          tableUtil.edit('cursor-prev')\n        }\n      },\n    }),\n    [value, editor, tableUtil]\n  )\n\n  return (\n    <div className={className}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={setValue}\n      >\n        <ToolBar />\n        <Editable\n          placeholder='Write something'\n          renderElement={renderElement}\n        />\n      </Slate>\n    </div>\n  )\n}\n\nexport default forwardRef(TableEditor)","import { useRef, useState, useEffect, useCallback } from 'react'\nimport { Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\n\nimport TableEditor from '../components/TableEditor'\nimport { slateValueToString } from '../utils/util'\nimport { tableLineReg, DEFAULT_TABLE } from '../utils/contants'\nimport './App.css'\n\nconst logseq = window.logseq\nconst logseqApp = logseq.App\nconst logseqEditor = logseq.Editor\n\nconst isInBrower = process.env.REACT_APP_ENV === 'browser'\n\nconst App = ({ content, tables, blockId }) => {\n\n  const tableEditorMapRef = useRef({})\n  const [arrAfterSplitByTable, setArrAfterSplitByTable] = useState([])\n\n  const setTableEditorRef = (index, dom) => {\n    tableEditorMapRef.current = {\n      ...tableEditorMapRef.current,\n      [index]: dom,\n    }\n  }\n\n  const onClickConfirm = () => {\n    if (!blockId && !isInBrower) return logseqApp.showMsg('uuid error')\n    const markdownContent = arrAfterSplitByTable.map((node, index) => {\n      if (node.type === 'table') {\n        const slateVal = tableEditorMapRef.current?.[index]?.getEditorValue()?.[0]\n        console.log('[faiz:] === slateVal', slateVal)\n        return slateValueToString(slateVal)\n      }\n      return node.str\n    }).join('\\n')\n    if (isInBrower) return console.log('[faiz:] === save content:\\n', markdownContent, '\\nblockId:', blockId)\n\n    logseqEditor.updateBlock(blockId, markdownContent)\n      .then(() => {\n        logseqApp.showMsg('markdown table overwrite success')\n        logseq.hideMainUI()\n      })\n      .catch(err => {\n        logseqApp.showMsg('markdown table overwrite error', 'warning')\n        console.log('[faiz:] === onClickConfirm error', err)\n      })\n  }\n  const onClickCancel = () => logseq.hideMainUI()\n  const onClickAdd = () => {\n    setArrAfterSplitByTable(_arr => {\n      if (_arr.find(node => node.type === 'table')) {\n        // spreate table by empty line\n        return _arr.concat([\n          {\n            type: 'notTable',\n            str: '',\n          },\n          { type: 'table', str: DEFAULT_TABLE }\n        ])\n      }\n      return _arr.concat({ type: 'table', str: DEFAULT_TABLE })\n    })\n  }\n  const onKeydown = useCallback(e => {\n    if (e.code === 'Tab' && e.shiftKey === false) {\n      e.preventDefault()\n      Object.keys(tableEditorMapRef.current).forEach(key => {\n        tableEditorMapRef.current?.[key]?.onKeydown('Tab')\n      })\n    } else if (e.code === 'Tab' && e.shiftKey) {\n      e.preventDefault()\n      Object.keys(tableEditorMapRef.current).forEach(key => {\n        tableEditorMapRef.current?.[key]?.onKeydown('ShiftTab')\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    const arr = splitStrByTable(content, tables)\n    setArrAfterSplitByTable(arr)\n    console.log('[faiz:] === arrAfterSplitByTable', arr)\n  }, [content, tables])\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydown)\n    return () => {\n      window.removeEventListener('keydown', onKeydown)\n    }\n  }, [onKeydown])\n\n  return (\n    <div className=\"w-screen h-screen flex flex-col justify-center items-center\">\n      <div className=\"w-screen h-screen absolute\" style={{ background: 'rgba(0, 0, 0, .3)', zIndex: -1 }} onClick={onClickCancel}></div>\n      <div className=\"w-2/3 overflow-y-auto\" style={{ maxHeight: '80%'}}>\n        <div className=\"mt-2 flex flex-col\">\n          {\n            arrAfterSplitByTable?.map((node, index) => {\n              return node?.type === 'table'\n              ? (<TableEditor className=\"my-2\" content={node?.str} key={index} ref={dom => setTableEditorRef(index, dom)} />)\n              : (<div className=\"bg-gray-400 text-gray-300 my-3 rounded px-1 py-2\" key={index} style={{whiteSpace: 'pre-line'}}>{node.str}</div>)\n            })\n          }\n        </div>\n      </div>\n      <Button ghost className=\"rounded mt-2 flex items-center\" icon={<PlusOutlined />} onClick={onClickAdd}>Add New Table</Button>\n      <div className=\"flex w-2/3 flex-row justify-end mt-4\">\n        <Button className=\"mr-1 rounded\" onClick={onClickCancel}>Cancel</Button>\n        <Button className=\"rounded\" type=\"primary\" onClick={onClickConfirm}>Confirm</Button>\n      </div>\n    </div>\n  )\n}\n\nconst genTable = (arr, startLine, endLine) => {\n  return arr\n    .slice(startLine, endLine)\n    // 暂行逻辑，看是否可以优化： 无空行隔开的两个table，认为是一个 table，且过滤掉不符合 table 语法的内容\n    .filter(str => tableLineReg.test(str))\n    .join('\\n')\n}\nconst splitStrByTable = (str, tables = []) => {\n  const strToArr = str.split('\\n')\n  let strArrByTable = []\n\n  tables.forEach((table, index, arr) => {\n    const [startLine, endLine] = table\n    const preEndLine = index === 0 ? 0 : arr[index - 1][1]\n\n    if (startLine === preEndLine) {\n      strArrByTable.push({\n        str: genTable(strToArr, startLine, endLine),\n        type: 'table',\n      })\n    } else {\n      strArrByTable.push({\n        str: strToArr.slice(preEndLine, startLine).join('\\n'),\n        type: 'notTable',\n      })\n      strArrByTable.push({\n        // str: strToArr.slice(startLine, endLine).join('\\n'),\n        str: genTable(strToArr, startLine, endLine),\n        type: 'table',\n      })\n    }\n\n  })\n\n  const [/*lastTableStartLine*/, lastTableEndLine] = tables[tables.length - 1]\n  if (strToArr.length - 1 >= lastTableEndLine) {\n    strArrByTable.push({\n      str: strToArr.slice(lastTableEndLine).join('\\n'),\n      type: 'notTable'\n    })\n  }\n\n  return strArrByTable\n}\nexport default App","import MarkdownIt from \"markdown-it\"\n\nimport { tableLineReg, DEFAULT_TABLE } from \"./contants\"\n\nconst md = new MarkdownIt()\n\nconst parseMarkdownTable = (input) => {\n  const strArr = input.split('\\n')\n  // token https://github.com/markdown-it/markdown-it/blob/master/lib/token.js\n  const tokenList = md.parse(input, {})\n\n  const tables = tokenList\n    .filter(token => token?.type === 'table_open')\n    .map(token => {\n      // map is Sourse map, format [startLine, endLine]\n      let [startLine , endLine] = token.map\n      const endLineStr = strArr[endLine]\n\n      if (tableLineReg.test(endLineStr)) return token.map\n\n      // fix markdown-it table must have a newLine after\n      let trueEndLine = -1\n      while (endLine > startLine) {\n        if (tableLineReg.test(strArr[endLine])) {\n          trueEndLine = endLine\n          break\n        }\n        endLine--\n      }\n      return [startLine, trueEndLine + 1]\n    })\n  \n  if (tables?.length === 0) {\n    console.warn('[faiz:] === No Table Found')\n    input += `${input === '' ? '' : '\\n'}${DEFAULT_TABLE}`\n    return parseMarkdownTable(input)\n  }\n\n  return tables\n}\n\nexport default parseMarkdownTable","import '@logseq/libs'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './pages/App'\nimport parseMarkdownTable from './utils/parseRawInputByMarkdownIt'\n// import { multipleTables, empty, longTables, onlyText, tableWithTextBeforeAndAfter } from './utils/testExample'\nimport { longTables } from './utils/testExample'\nimport './index.css'\n\nconst logseq = window.logseq\nconst logseqEditor = logseq.Editor\nconst logseqApp = logseq.App\n\nconst isInBrower = process.env.REACT_APP_ENV === 'browser'\nconst bootEditor = (input, blockId) => {\n  console.log('[faiz:] === Raw Input: \\n', input)\n  let tables = parseMarkdownTable(input)\n  console.log('[faiz:] === markdownIt parse res', tables)\n  renderApp(input, tables, blockId)\n}\nif (isInBrower) {\n  bootEditor(longTables, 111)\n} else {\n  logseq.ready().then(() => {\n    // padding-left: var(--ls-left-sidebar-width);\n    logseq.provideStyle(`\n      iframe#logseq-markdown-table.lsp-iframe-sandbox {\n        z-index: 10;\n      }\n    `)\n    console.log('[faiz:] === markdown-table-editor-plugin loaded')\n    logseqEditor.registerBlockContextMenuItem('markdown-table-editor', (e) => {\n      console.log('[faiz:] === woz-markdown-table-editor', e)\n      logseqEditor.getBlock(e.uuid).then(block => {\n        console.log('[faiz:] === block', block)\n        const { format, content } = block\n        // only support markdown\n        if (format !== 'markdown') return logseqApp.showMsg('woz-markdown-table-editor only support markdown', 'warning')\n\n        bootEditor(content, e.uuid)\n\n        // for empty block\n        // todo: fix\n        // if (content === '') return renderApp(DEFAULT_TABLE, [], e.uuid)\n\n        // const tables = parseMarkdownTable(content)\n        // if (tables?.length > 0) {\n        //   // const [startLine, endLine] = tables[0]\n        //   // const firstTable = content.split('\\n').slice(startLine, endLine).join('\\n')\n        //   // console.log('[faiz:] === firstTable', content, firstTable, startLine, endLine)\n        //   // return renderApp(firstTable, e.uuid)\n        //   return renderApp(content, tables, e.uuid)\n        // }\n\n        // const renderHtml = md.render(content)\n        // if (renderHtml.startsWith('<table>') && (renderHtml.endsWith('</table>') || renderHtml.endsWith('</table>\\n'))) {\n        //   return renderApp(content || DEFAULT_TABLE, e.uuid)\n        // }\n        // format to table error\n        // window.logseq.App.showMsg('Sorry, block content format to markdown table error', 'warning')\n        // console.log('[faiz:] === block content format to markdown table error')\n      })\n    })\n\n    logseq.on('ui:visible:changed', (e) => {\n      if (!e.visible) {\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n      }\n    });\n  })\n}\n\nfunction renderApp(content, tables, blockId) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App content={content} tables={tables} blockId={blockId} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n  if (!isInBrower) logseq.showMainUI()\n}\n","export const empty = ''\n\nexport const onlyText = 'normal text\\nnor'\n\nexport const onlyOneTable = '|title1|title2|\\n|--|--|\\n|content1|content2|'\n\nexport const tableWithTextBefore = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|'\n\nexport const tableWithTextBeforeAndAfter = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|\\n**bold**\\nother'\n\nexport const multipleTables = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|\\n|**bold**|\\nother\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\ntest text'\n\nexport const longTables = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|\\n\\n**bold**\\nother\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\n|contentB|contentB|\\n|contentB|contentB|\\n|contentB|contentB|'"],"sourceRoot":""}