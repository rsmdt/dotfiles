[color]
  ui = true

; [color "branch"]
;   current = yellow reverse
;   local = yellow
;   remote = green

; [color "diff"]
;   meta = yellow bold
;   frag = magenta bold
;   old = red
;   new = green

[alias]
  # add
  chunkyadd = add --patch           # stage commits chunk by chunk

  # via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  snapshots = !git stash list --grep snapshot

  #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

  last = diff HEAD^                 # diff last committed change

  # status
  st = status

  # log
  l = log --all --decorate --oneline --graph --date=short
  pulls = log --pretty=format:\"%h, %ci\"
  ; changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  changes = log --oneline --name-status
  ; short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  ; simple = log --pretty=format:\" * %s\"
  graph = log --graph --abbrev-commit --pretty=format:'%C(yellow)%h%Creset%C(blue)%d%Creset %s %C(green)<%an>%Creset %C(blue)%ci%Creset'

  # reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool

  cleanup = !git branch --merged | egrep -v "(master|develop)"
  root = rev-parse --show-toplevel

[format]
  ; pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[mergetool]
  prompt = false

[merge]
  summary = true
  verbosity = 1

[apply]
  whitespace = nowarn

[branch]
  autosetupmerge = true
  mergeoptions = --no-ff

[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = upstream

[core]
  autocrlf = false
  editor = nvim
  commitGraph = true
  pager = delta ; brew install git-delta

[advice]
  statusHints = false

[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
  algorithm = patience
  ; tool = vimdiff

; https://github.com/dandavison/delta
[delta]
  ; syntax-theme = Dracula
  ; features = side-by-side line-numbers decorations
  ; whitespace-error-style = 22 reverse
  ; hunk-header-style = omit
  side-by-side = true ; side by side view with line-wrapping
  line-numbers = true ; adds line numbers
  navigate = true ; use n and N to move between diff sections

[interactive]
  diffFilter = delta --color-only

[hub]
  host = github.com
  protocol = ssh

[init]
	defaultBranch = main

[include]
  path = .gitconfig.user
